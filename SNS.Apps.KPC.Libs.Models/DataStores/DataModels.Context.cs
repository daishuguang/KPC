//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SNS.Apps.KPC.Libs.Models.DataStores
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataModels : DbContext
    {
        public DataModels()
            : base("name=DataModels")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_User_Rate> tbl_User_Rate { get; set; }
        public virtual DbSet<tbl_User_Route> tbl_User_Route { get; set; }
        public virtual DbSet<tbl_User_Comment> tbl_User_Comment { get; set; }
        public virtual DbSet<tbl_User_Import> tbl_User_Import { get; set; }
        public virtual DbSet<tbl_User_Order> tbl_User_Order { get; set; }
        public virtual DbSet<tbl_Route> tbl_Route { get; set; }
        public virtual DbSet<tbl_User_Payment> tbl_User_Payment { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<tbl_Common_PhoneVerify> tbl_Common_PhoneVerify { get; set; }
        public virtual DbSet<tbl_Common_City> tbl_Common_City { get; set; }
        public virtual DbSet<tbl_Common_Province> tbl_Common_Province { get; set; }
        public virtual DbSet<tbl_User_External> tbl_User_External { get; set; }
        public virtual DbSet<tbl_User_Insurance> tbl_User_Insurance { get; set; }
        public virtual DbSet<tbl_User_Order_Insurance> tbl_User_Order_Insurance { get; set; }
        public virtual DbSet<tbl_User_Promotion> tbl_User_Promotion { get; set; }
        public virtual DbSet<tbl_User_Track> tbl_User_Track { get; set; }
    
        public virtual ObjectResult<sp_Admin_LoadAvailableRoutes_Result> sp_Admin_LoadAvailableRoutes(Nullable<System.DateTime> dtStartDate, Nullable<System.DateTime> dtEndDate)
        {
            var dtStartDateParameter = dtStartDate.HasValue ?
                new ObjectParameter("dtStartDate", dtStartDate) :
                new ObjectParameter("dtStartDate", typeof(System.DateTime));
    
            var dtEndDateParameter = dtEndDate.HasValue ?
                new ObjectParameter("dtEndDate", dtEndDate) :
                new ObjectParameter("dtEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_LoadAvailableRoutes_Result>("sp_Admin_LoadAvailableRoutes", dtStartDateParameter, dtEndDateParameter);
        }
    
        public virtual int sp_Sync_CancelRoute(Nullable<long> rID, Nullable<int> rStatus)
        {
            var rIDParameter = rID.HasValue ?
                new ObjectParameter("rID", rID) :
                new ObjectParameter("rID", typeof(long));
    
            var rStatusParameter = rStatus.HasValue ?
                new ObjectParameter("rStatus", rStatus) :
                new ObjectParameter("rStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sync_CancelRoute", rIDParameter, rStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> sp_Get_Latest_RouteID_By_UserGUID(string userGUID)
        {
            var userGUIDParameter = userGUID != null ?
                new ObjectParameter("userGUID", userGUID) :
                new ObjectParameter("userGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("sp_Get_Latest_RouteID_By_UserGUID", userGUIDParameter);
        }
    
        public virtual int sp_Sync_ExpireRoute(string routeIDs)
        {
            var routeIDsParameter = routeIDs != null ?
                new ObjectParameter("routeIDs", routeIDs) :
                new ObjectParameter("routeIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sync_ExpireRoute", routeIDsParameter);
        }
    
        public virtual int sp_Sync_AcquireRoute(Nullable<long> routeID, Nullable<long> acquireID, Nullable<int> acquireAction)
        {
            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("routeID", routeID) :
                new ObjectParameter("routeID", typeof(long));
    
            var acquireIDParameter = acquireID.HasValue ?
                new ObjectParameter("acquireID", acquireID) :
                new ObjectParameter("acquireID", typeof(long));
    
            var acquireActionParameter = acquireAction.HasValue ?
                new ObjectParameter("acquireAction", acquireAction) :
                new ObjectParameter("acquireAction", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sync_AcquireRoute", routeIDParameter, acquireIDParameter, acquireActionParameter);
        }
    
        public virtual int sp_Set_UserTrack(Nullable<long> userID, Nullable<long> routeID, Nullable<double> lng, Nullable<double> lat)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("routeID", routeID) :
                new ObjectParameter("routeID", typeof(long));
    
            var lngParameter = lng.HasValue ?
                new ObjectParameter("lng", lng) :
                new ObjectParameter("lng", typeof(double));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Set_UserTrack", userIDParameter, routeIDParameter, lngParameter, latParameter);
        }
    
        public virtual ObjectResult<sp_Load_Available_Routes_Result> sp_Load_Available_Routes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_Available_Routes_Result>("sp_Load_Available_Routes");
        }
    
        public virtual ObjectResult<sp_Load_Available_UserTracks_Result> sp_Load_Available_UserTracks(Nullable<int> userRole)
        {
            var userRoleParameter = userRole.HasValue ?
                new ObjectParameter("userRole", userRole) :
                new ObjectParameter("userRole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_Available_UserTracks_Result>("sp_Load_Available_UserTracks", userRoleParameter);
        }
    
        public virtual int sp_Set_PhoneVerifyCode(string phoneNum, string code, Nullable<int> channel)
        {
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("phoneNum", phoneNum) :
                new ObjectParameter("phoneNum", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var channelParameter = channel.HasValue ?
                new ObjectParameter("channel", channel) :
                new ObjectParameter("channel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Set_PhoneVerifyCode", phoneNumParameter, codeParameter, channelParameter);
        }
    
        public virtual ObjectResult<sp_Set_PromotionUser_Result> sp_Set_PromotionUser(Nullable<long> userID, Nullable<int> code)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Set_PromotionUser_Result>("sp_Set_PromotionUser", userIDParameter, codeParameter);
        }
    
        public virtual int sp_Set_Route_Status(Nullable<long> routeID, Nullable<int> status)
        {
            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("routeID", routeID) :
                new ObjectParameter("routeID", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Set_Route_Status", routeIDParameter, statusParameter);
        }
    
        public virtual int sp_Load_UserOrder_By_UserID(Nullable<long> userID, Nullable<int> orderType, Nullable<int> orderStatus, Nullable<int> page, Nullable<int> count)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var orderTypeParameter = orderType.HasValue ?
                new ObjectParameter("orderType", orderType) :
                new ObjectParameter("orderType", typeof(int));
    
            var orderStatusParameter = orderStatus.HasValue ?
                new ObjectParameter("orderStatus", orderStatus) :
                new ObjectParameter("orderStatus", typeof(int));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Load_UserOrder_By_UserID", userIDParameter, orderTypeParameter, orderStatusParameter, pageParameter, countParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> sp_Load_Available_RouteIDs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("sp_Load_Available_RouteIDs");
        }
    
        public virtual ObjectResult<sp_Load_RouteMatrix_By_RouteIDs_Result> sp_Load_RouteMatrix_By_RouteIDs(string routeIDs)
        {
            var routeIDsParameter = routeIDs != null ?
                new ObjectParameter("routeIDs", routeIDs) :
                new ObjectParameter("routeIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_RouteMatrix_By_RouteIDs_Result>("sp_Load_RouteMatrix_By_RouteIDs", routeIDsParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Check_PhoneVerifyCode(string phoneNum, string code)
        {
            var phoneNumParameter = phoneNum != null ?
                new ObjectParameter("phoneNum", phoneNum) :
                new ObjectParameter("phoneNum", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Check_PhoneVerifyCode", phoneNumParameter, codeParameter);
        }
    
        public virtual ObjectResult<sp_Load_UserRoute_By_RouteID_Result> sp_Load_UserRoute_By_RouteID(Nullable<long> routeID)
        {
            var routeIDParameter = routeID.HasValue ?
                new ObjectParameter("routeID", routeID) :
                new ObjectParameter("routeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_UserRoute_By_RouteID_Result>("sp_Load_UserRoute_By_RouteID", routeIDParameter);
        }
    
        public virtual ObjectResult<sp_Load_UserRoute_By_RouteIDs_Result> sp_Load_UserRoute_By_RouteIDs(string routeIDs)
        {
            var routeIDsParameter = routeIDs != null ?
                new ObjectParameter("routeIDs", routeIDs) :
                new ObjectParameter("routeIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_UserRoute_By_RouteIDs_Result>("sp_Load_UserRoute_By_RouteIDs", routeIDsParameter);
        }
    
        public virtual ObjectResult<sp_Load_UserRoute_By_UserID_Result> sp_Load_UserRoute_By_UserID(Nullable<long> userID, Nullable<int> page, Nullable<int> count)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_UserRoute_By_UserID_Result>("sp_Load_UserRoute_By_UserID", userIDParameter, pageParameter, countParameter);
        }
    
        public virtual ObjectResult<sp_Load_UserRoute_Newest_Result> sp_Load_UserRoute_Newest(string city, Nullable<int> page, Nullable<int> count)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_UserRoute_Newest_Result>("sp_Load_UserRoute_Newest", cityParameter, pageParameter, countParameter);
        }
    
        public virtual ObjectResult<sp_Get_PromotionCode_Result> sp_Get_PromotionCode(Nullable<long> userID, Nullable<int> channelID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var channelIDParameter = channelID.HasValue ?
                new ObjectParameter("channelID", channelID) :
                new ObjectParameter("channelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_PromotionCode_Result>("sp_Get_PromotionCode", userIDParameter, channelIDParameter);
        }
    
        public virtual ObjectResult<sp_Get_PromotionCount_Result> sp_Get_PromotionCount(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_PromotionCount_Result>("sp_Get_PromotionCount", userIDParameter);
        }
    
        public virtual ObjectResult<sp_Load_Promoters_Result> sp_Load_Promoters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_Promoters_Result>("sp_Load_Promoters");
        }
    
        public virtual ObjectResult<sp_Load_UserRoute_Newest_Disp_Result> sp_Load_UserRoute_Newest_Disp(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_UserRoute_Newest_Disp_Result>("sp_Load_UserRoute_Newest_Disp", cityParameter);
        }
    
        public virtual int sp_Sync_UserOrder_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sync_UserOrder_Status");
        }
    
        public virtual ObjectResult<sp_Load_PromotionUsers_Result> sp_Load_PromotionUsers(Nullable<long> userID, Nullable<int> maxCount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(long));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("maxCount", maxCount) :
                new ObjectParameter("maxCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Load_PromotionUsers_Result>("sp_Load_PromotionUsers", userIDParameter, maxCountParameter);
        }
    
        public virtual ObjectResult<string> sp_Get_UserInsuranceFolio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Get_UserInsuranceFolio");
        }
    
        public virtual ObjectResult<string> sp_Get_UserOrderFolio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Get_UserOrderFolio");
        }
    }
}
